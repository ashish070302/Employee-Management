@model Employee.UI.ViewModels.PageEmployeeViewModel

@{
    ViewData["Title"] = "Index";
}

<div class="container-fluid">
    <br>
    <br>
    <h1 class="text-center">Employee's List</h1>
    <br>
    <br>

    <div class="row">
        <div class="col-6">
            <p>
                <a asp-action="Create" class="btn btn-dark">Create New Employee</a>
            </p>
        </div>
        <div class="col-6">
                <form asp-action="Index" method="post" class="d-flex">
                    <input type="text" name="SearchText" value="@ViewData["filterData"]" class="form-control me-2" placeholder="Search" />
                    <button type="submit" class="btn btn-dark" value="Search">Search</button>
            </form>
        </div>
    </div>

    <div class="col-12">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>
                        Id
                    </th>
                    <th>
                        Employee Code
                    </th>
                    <th>
                        Name
                    </th>
                    <th>
                        Date Of Birth
                    </th>
                    <th>
                        Date Of Joining
                    </th>
                    <th>
                        Deptartment 
                    </th>
                    <th>
                        State
                    </th>
                    <th>
                        City
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
        @foreach (var item in Model.Employee) {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Code)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateOfBirth)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateOfJoining)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DeptartmentName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StateName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CityName)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
                            @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                    </td>
                </tr>
        }
            </tbody>
        </table>
    </div>

@{
    var previous = Model.PageInfo.HasPrevious ? "" : "disabled";
    var next = Model.PageInfo.HasNext ? "" : "disabled";
}

@* <a asp-route-filterText="@ViewData["filterData"]" class="btn btn-dark @previous" asp-route-pageNumber="@(Model.PageInfo.PageNumber - 1)">Previous</a> *@
@* <a asp-route-filterText="@ViewData["filterData"]" class="btn btn-dark @next" asp-route-pageNumber="@(Model.PageInfo.PageNumber + 1)">Next</a> *@

    <div class="row">
        <div class="col-12 d-flex justify-content-end">
            <nav aria-label="Page navigation">
                <ul class="pagination bg-dark">
                    <li class="page-item @previous">
                        <a class="btn btn-dark" asp-route-filterText="@ViewData["filterData"]" asp-route-pageNumber="@(Model.PageInfo.PageNumber - 1)" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                            <span class="sr-only">Previous</span>
                        </a>
                    </li>
                    @for (int i = 1; i <= Model.PageInfo.TotalPages; i++)
                    {
                        <li class="page-item @(Model.PageInfo.PageNumber == i ? "active" : "")">
                            <a class="page-link" asp-route-filterText="@ViewData["filterData"]" asp-route-pageNumber="@i">@i</a>
                        </li>
                    }
                    <li class="page-item @next">
                        <a class="btn btn-dark" asp-route-filterText="@ViewData["filterData"]" asp-route-pageNumber="@(Model.PageInfo.PageNumber + 1)" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                            <span class="sr-only">Next</span>
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>

<style>
    body {
        background-color: #f5f5f5; /* Off white background */
        color: #000; /* Black text color */
    }

    .container {
        max-width: 1500px; /* Adjust container width */
        margin: auto;
    }

    form {
        margin-bottom: 20px;
    }

    input[type="text"],
    input[type="email"],
    textarea,
    select {
        width: 100%;
        padding: 10px;
        margin-bottom: 10px;
        border: 1px solid #ccc;
        border-radius: 4px;
        box-sizing: border-box;
    }

    input[type="submit"] {
        width: auto;
        cursor: pointer;
    }

    label {
        font-weight: bold;
    }

    .text-danger {
        font-size: 12px;
    }

    .btn-primary {
        background-color: #007bff; /* Bootstrap primary color */
        border-color: #007bff;
    }

        .btn-primary:hover {
            background-color: #0056b3; /* Darker shade on hover */
            border-color: #0056b3;
        }

    .back-link {
        display: block;
        margin-top: 20px;
    }

    .form-group {
        margin-bottom: 15px; /* Add margin between form groups */
    }

    input[type="text"],
    input[type="email"],
    textarea,
    select {
        margin-bottom: 5px; /* Add margin between form elements */
    }

    .table {
        width: 100%; /* Set the table width to 100% of its container */
    }

    h1 {
        font-family: 'Times New Roman', Times, serif;
        font-size: 64px;
    }

    .navbar {
        padding-top: 0; /* Remove top padding */
    }

    .navbar-nav .nav-link {
        color: #f8f9fa; /* Off-white color */
    }

        .navbar-nav .nav-link:hover,
        .navbar-nav .nav-link:focus {
            color: #dee2e6; /* Lighter shade of off-white on hover/focus */
        }

</style>
