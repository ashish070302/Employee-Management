@model Employee.UI.ViewModels.PageEmployeeViewModel

@{
    ViewData["Title"] = "Index";
}
<link href="~/css/empindex.css" rel="stylesheet" />

<div class="container-fluid">
    <h1 class="text-center">Employee's List</h1><br /><br />

    <div class="row">
        <div class="col-6">
            <p>
                <a asp-action="Create" class="btn btn-dark">Create New Employee</a>
            </p>
        </div>
        <div class="col-6">
                <form asp-action="Index" method="post" class="d-flex">
                    <input type="text" name="SearchText" value="@ViewData["filterData"]" class="form-control me-2" placeholder="Search" />
                    <button type="submit" class="btn btn-dark" value="Search">Search</button>
            </form>
        </div>
    </div>

    <div class="table-responsive">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>
                        Id
                    </th>
                    <th>
                        Code
                    </th>
                    <th>
                        Name
                    </th>
                    <th>
                        Date Of Birth
                    </th>
                    <th>
                        Date Of Joining
                    </th>
                    <th>
                        Deptartment 
                    </th>
                    <th>
                        State
                    </th>
                    <th>
                        City
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
        @foreach (var item in Model.Employee) {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Code)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateOfBirth)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateOfJoining)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DeptartmentName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StateName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CityName)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
                            <a href="#" onclick="confirmDelete('@item.Name', '@item.Id')">Delete</a>
                    </td>
                </tr>
        }
            </tbody>
        </table>
    </div>

@{
    var previous = Model.PageInfo.HasPrevious ? "" : "disabled";
    var next = Model.PageInfo.HasNext ? "" : "disabled";
}
    @section Scripts
    {
        <script>
            function confirmDelete(employeeName, employeeId) {
                if (confirm("Are you sure you want to delete " + employeeName + "?")) {
                    window.location.href = '@Url.Action("Delete", "Employee")' + "?id=" + employeeId;
                }
            }
        </script>
    }
@* <a asp-route-filterText="@ViewData["filterData"]" class="btn btn-dark @previous" asp-route-pageNumber="@(Model.PageInfo.PageNumber - 1)">Previous</a> *@
@* <a asp-route-filterText="@ViewData["filterData"]" class="btn btn-dark @next" asp-route-pageNumber="@(Model.PageInfo.PageNumber + 1)">Next</a> *@
    <br />
    <div class="row">
        <div class="col-12 d-flex justify-content-end">
            <nav aria-label="Page navigation">
                <ul class="pagination bg-dark">
                    <li class="page-item @previous">
                        <a class="btn btn-dark" asp-route-filterText="@ViewData["filterData"]" asp-route-pageNumber="@(Model.PageInfo.PageNumber - 1)" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                            <span class="sr-only">Previous</span>
                        </a>
                    </li>
                    @for (int i = 1; i <= Model.PageInfo.TotalPages; i++)
                    {
                        <li class="page-item @(Model.PageInfo.PageNumber == i ? "active" : "")">
                            <a class="page-link" asp-route-filterText="@ViewData["filterData"]" asp-route-pageNumber="@i">@i</a>
                        </li>
                    }
                    <li class="page-item @next">
                        <a class="btn btn-dark" asp-route-filterText="@ViewData["filterData"]" asp-route-pageNumber="@(Model.PageInfo.PageNumber + 1)" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                            <span class="sr-only">Next</span>
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>
